# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~



POST    /coupons/v1/coupons/apiVersion2_1_0     controllers.CouponsController.apiVersion2_1_0()
GET    /v1/cms/version    controllers.VersionController.getVersion
GET    /coupons/v1/coupons/version    controllers.VersionController.getVersion
GET    	/coupons/v1/coupons/999999999/details      			controllers.CouponsController.getHotzones
GET    /coupons/v1/coupons/redeem-status   controllers.CouponsController.redeemStatus
GET    /v1/coupons/redeem-status   controllers.CouponsController.redeemStatus
GET    /coupons/v1/coupons/categories                    ===============> Automated
GET    /coupons/v1/coupons/sample           controllers.CouponsController.sampleCouponsDb
GET    	/coupons/v1/coupons/nearby      controllers.CouponsController.couponsNearby
GET    	/coupons/v1/coupons/favourites      controllers.CouponsController.couponsFavorites
GET    	/coupons/v1/coupons/:couponid/likes      controllers.CouponsController.getLikeCount(couponid)
GET    	/coupons/v1/coupons/      ===============> Automated
GET    	/coupons/v1/coupons/locations      controllers.CouponsController.getCouponLocations()
GET    	/coupons/v1/coupons/hotzones      controllers.CouponsController.getCouponLocations()
POST    /coupons/v1/coupons/:couponid/user-action      controllers.CouponsController.couponAction(couponid)
POST    /coupons/v1/coupons/:couponid/redeem    controllers.CouponsController.customerRedeem(couponid)
POST   	/coupons/v1/coupons/user-location            controllers.CouponsController.storeUserLocation
GET   	/coupons/v1/coupons/user-location            controllers.CouponsController.getUserLocation
POST    /coupons/v1/coupons/mastercode/coupon-codes            ===============> Automated
POST    /coupons/v1/coupons/mastercode/coupons            controllers.MasterCodeController.getApplicableCoupons
GET     /coupons/v1/coupons/notify            controllers.NotificationsController.notifyExpiredCoupons
POST    /coupons/v1/coupons/merchant-redeem   ===============> Automated
POST    /coupons/v1/coupons/merchant-verify   ===============> Automated
POST    /coupons/v1/coupons/merchant/checkout    ===============> Automated
POST    /coupons/v1/coupons/merchant-block   ===============> Automated
POST    /coupons/v1/coupons/merchant-delayed-redeem   ===============> Automated
POST    /coupons/v1/coupons/merchant-release   ===============> Automated
DELETE    /coupons/v1/coupons/merchant/:masId/checkout/:couponCode    controllers.CouponsController.cancelMerchantCheckout(masId: String, couponCode: String)
GET     /coupons/v1/coupons/merchant-settlement-report         controllers.RedemptionReportController.getMerchantReport
GET     /coupons/v1/coupons/merchantId-settlement              controllers.RedemptionReportController.getMerchantConsolidatedReport
GET     /coupons/v1/coupons/merchantCoupons                    controllers.RedemptionReportController.getMerchantsCoupons
GET     /coupons/v1/coupons/merchantRedemptions                    controllers.RedemptionReportController.getMerchantsRedemption
GET     /coupons/v1/coupons/merchant/:masId       controllers.MerchantController.activeCoupons(masId: String)
GET    	/coupons/v1/coupons/:ids/details      controllers.CouponsController.couponDetails(ids)
POST    /coupons/v1/coupons/log-event      controllers.CouponsController.dummyResponse()
POST    /coupons/v1/coupons/push-coupons            controllers.CouponsController.pushCoupons()
POST    /coupons/v1/coupons/accept_txn            controllers.CouponsController.attachCouponToConsumer
POST    /coupons/v1/coupons/create-coupon                 controllers.CouponsController.createCouponFromMPOS
POST    /coupons/v1/coupons/create-coupon-push                 controllers.CouponsController.createCouponPushNotification
GET     /v1/coupons/:couponId/refresh/                         controllers.CouponsController.refresh(couponId: Long)
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
POST    /coupons/v1/coupons/apiVersion2_1_0     controllers.CouponsController.apiVersion2_1_0()
GET    /v1/cms/login                          controllers.Application.login
POST     /legacy/login                        ===============> Automated
GET     /v1/cms/admin/info/                   controllers.AdminController.getSelfInfo
GET     /v1/cms/admin/super-group-info/       controllers.AdminController.getSuperGroupInfo
PUT     /v1/cms/admin/info/                   controllers.AdminController.updateSelfInfo
GET     /v1/cms/admin/admins/                   controllers.AdminController.findAll
POST     /v1/cms/admin/admins/                   controllers.AdminController.createAdmin
PUT     /v1/cms/admin/admins/                   controllers.AdminController.updateAdmin
DELETE /v1/cms/admin/admins/:id                   controllers.AdminController.deleteAdmin(id : Long)
GET     /v1/cms/admin/coupons/                  controllers.CouponsController.getAll()
PUT     /v1/cms/coupons/:cid/update-index      controllers.CouponsController.updateCouponDataInESIndex(cid: Long)
GET     /v1/cms/coupons/re-index					controllers.CouponsController.indexCouponsData
GET     /v1/cms/admin/coupons/:couponId         controllers.CouponsController.getCouponById(couponId: Long)
POST    /v1/cms/admin/coupons/:couponId/update_status/:status                            controllers.CouponsController.updateCouponStatus(couponId: Long, status: String)
PUT /v1/cms/update_credentials                        controllers.AuthController.updateCredentials
PUT /v1/cms/reset_password                            controllers.AuthController.resetPassword
GET /v1/cms/login_status                               controllers.AuthController.loginStatus
GET           /v1/cms/merchant/:merchantId/coupons/:couponId/codes/count                 controllers.CouponsController.countCouponCodes(merchantId: Long, couponId: Long)
GET           /v1/cms/merchant/:merchantId/coupons/:couponId/codes                       controllers.CouponsController.getCouponCodes(merchantId: Long, couponId: Long)
DELETE        /v1/cms/merchant/:merchantId/coupons/:couponId/codes                       controllers.CouponsController.deleteCouponCode(merchantId: Long, couponId: Long)
POST        /v1/cms/merchant/:merchantId/coupons/codes/csv                  controllers.CouponsController.attachCouponCodesWithoutCoupon(merchantId: Long)
POST        /v1/cms/merchant/:merchantId/coupons/:couponId/codes/csv        controllers.CouponsController.attachCouponCodes(merchantId: Long, couponId: Long)
GET           /v1/cms/merchant/:merchantId/coupon/:couponId/push_to_phones               controllers.CouponsController.getPushPhones(merchantId: Long, couponId: Long)
GET           /v1/cms/merchant/:merchantId/coupon/:couponId/push_to_phones/count         controllers.CouponsController.pushPhonesCount(merchantId: Long, couponId: Long)
DELETE        /v1/cms/merchant/:merchantId/coupon/:couponId/push_to_phones               controllers.CouponsController.deletePushPhones(merchantId: Long, couponId: Long)
POST          /v1/cms/merchant/:merchantId/coupon/:couponId/push_to_customers/csv        controllers.CouponsController.pushToCustomers(merchantId: Long, couponId: Long)
POST          /v1/cms/merchant/:merchantId/coupon/:couponId/push_to_phones/csv           controllers.CouponsController.pushToPhones(merchantId: Long, couponId: Long)
GET           /v1/cms/admin/merchants/subscription                    controllers.SubscriptionController.getAdminMerchantSubscription()
POST          /v1/cms/admin/merchants/:merchantId/subscription        controllers.SubscriptionController.subscribeAdminMerchant(merchantId: Long)
DELETE        /v1/cms/admin/merchants/:merchantId/subscription        controllers.SubscriptionController.unsubscribeAdminMerchant(merchantId: Long)
GET           /v1/cms/admin/merchants                                   controllers.MerchantController.getAll()
GET           /v1/cms/admin/merchants/:id                               controllers.MerchantController.get(id: Long)
PUT           /v1/cms/admin/merchants/:id                               controllers.MerchantController.update(id: Long)
POST          /v1/cms/admin/merchants                                   ===============> Automated
DELETE        /v1/cms/admin/merchants/:id                               controllers.MerchantController.delete(id: Long)
POST          /v1/cms/admin/merchants/:merchantId/status/:status        controllers.MerchantController.updateStatus(merchantId: Long, status: String)
GET           /v1/cms/admin/merchant/merchant_group/:id	                        controllers.MerchantController.getMerchantGroups(id: Long)
GET           /coupons/v1/merchants                              		controllers.MerchantController.find()
GET     /v1/cms/merchant/info/                   controllers.MerchantController.getSelfInfo
PUT     /v1/cms/merchant/info/                   controllers.MerchantController.updateSelfInfo
POST     /v1/cms/user-segment/					controllers.UserSegmentController.create
GET     /v1/cms/user-segment/                 controllers.UserSegmentController.getAll()
GET     /v1/cms/user-segment/:id                 controllers.UserSegmentController.getOne(id: Int)
DELETE     /v1/cms/user-segment/:id                 controllers.UserSegmentController.delete(id: Int)
GET     /v1/cms/composite-segment/:id                 controllers.UserSegmentController.getCompositeSegment(id: Int)
GET     /v1/cms/client-types/                 controllers.ClientTypeController.getAll()
POST     /v1/cms/custom-user-segment/					controllers.CustomSegmentController.create
POST     /v1/cms/coupon-campaign/					===============> Automated
GET     /v1/cms/coupon-campaign/                 controllers.CouponCampaignController.getAll()
GET     /v1/cms/coupon-campaign/:id                controllers.CouponCampaignController.getOne(id: Int)
DELETE     /v1/cms/coupon-campaign/:id                 controllers.CouponCampaignController.delete(id: Int)
PUT     /v1/cms/coupon-campaign/:id                 controllers.CouponCampaignController.update(id: Int)
GET           /v1/cms/merchant/address                                              controllers.MerchantAddressController.filter()
GET           /v1/cms/merchant/:merchantId/address/:addressId                       controllers.MerchantAddressController.get(merchantId: Long, addressId: Long)
POST          /v1/cms/merchant/:merchantId/address                                  ===============> Automated
POST          /v1/cms/merchant/address/csv                                          controllers.MerchantAddressController.uploadMerchantAddressCSV()
PUT           /v1/cms/merchant/:merchantId/address/:addressId                       controllers.MerchantAddressController.update(merchantId: Long, addressId: Long)
DELETE        /v1/cms/merchant/:merchantId/address/:addressId                       controllers.MerchantAddressController.delete(merchantId: Long, addressId: Long)
POST          /v1/cms/merchant/:merchantId/address/:addressId/status/:status        controllers.MerchantAddressController.updateStatus(merchantId: Long, addressId: Long, status: String)
GET           /v1/cms/merchant/:merchantId/coupon/:couponId        controllers.CouponsController.get(merchantId : Long, couponId : Long)
POST          /v1/cms/merchant/:merchantId/coupon                  ===============> Automated
PUT           /v1/cms/merchant/:merchantId/coupon/:couponId        controllers.CouponsController.update(merchantId: Long, couponId : Long)
DELETE        /v1/cms/merchant/:merchantId/coupon/:couponId        controllers.CouponsController.delete(merchantId: Long, couponId : Long)
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
POST          /v1/cms/merchant/upload                           controllers.MerchantController.upload()
GET          /v1/cms/merchant/downloadMidMasId                           controllers.MerchantController.downloadMidMasId()
GET           /v1/cms/merchant-group/                           controllers.MerchantGroupController.findAll()
GET           /v1/cms/merchant-group/:id                        controllers.MerchantGroupController.findById(id : Long)
POST          /v1/cms/merchant-group/                           controllers.MerchantGroupController.create()
PUT           /v1/cms/merchant-group/:id                        controllers.MerchantGroupController.update(id: Long)
DELETE        /v1/cms/merchant-group/:id                        controllers.MerchantGroupController.delete(id: Long)
POST          /v1/cms/merchant-group/upload                     controllers.MerchantGroupController.upload()
GET           /v1/cms/brands/
GET           /v1/cms/brands/:id                                controllers.BrandController.findById(id : Long)
POST          /v1/cms/brands/                                   ===============> Automated
PUT           /v1/cms/brands/:id                                controllers.BrandController.update(id: Long)
DELETE        /v1/cms/brands/:id                                controllers.BrandController.delete(id: Long)
GET           /v1/cms/coupon-group/                             controllers.CouponGroupController.findAll()
GET           /v1/cms/coupon-group/:id                          controllers.CouponGroupController.findById(id : Long)
POST          /v1/cms/coupon-group/                             controllers.CouponGroupController.create()
PUT           /v1/cms/coupon-group/                             controllers.CouponGroupController.updateCG()
PUT           /v1/cms/coupon-group/:id                          controllers.CouponGroupController.update(id: Long)
DELETE        /v1/cms/coupon-group/:id                          controllers.CouponGroupController.delete(id: Long)
GET           /v1/cms/tags/                           controllers.TagsController.findAll()
GET           /v1/cms/tags/:id                        controllers.TagsController.findById(id : Long)
POST          /v1/cms/tags/:name/tag/:couponId        controllers.TagsController.createByName(name :String, couponId: Long)
PUT           /v1/cms/tags/:id                        controllers.TagsController.update(id: Long)
DELETE        /v1/cms/tags/:id                        controllers.TagsController.delete(id: Long)
GET           /v1/cms/admin/tags                                   controllers.TagsController.findAll()
GET           /v1/cms/admin/tags/:id                               controllers.TagsController.findById(id: Long)
PUT           /v1/cms/admin/tags/:id                               controllers.TagsController.update(id: Long)
POST          /v1/cms/admin/tags                                   controllers.TagsController.create()
DELETE        /v1/cms/admin/tags/:id                               controllers.TagsController.delete(id: Long)
POST          /v1/cms/coupons/uploadFile/csv                                             controllers.CouponsController.uploadFile()
GET           /v1/cms/coupons/downloadCouponCSV/                                         controllers.CouponsController.downloadCouponCSV()
POST          /v1/cms/coupons/updateBoosts/                                             controllers.CouponsController.updateBoosts()
POST          /v1/cms/coupons/promo/                           controllers.PromotionsController.create()
PUT           /v1/cms/coupons/promo/                           controllers.PromotionsController.update()
DELETE        /v1/cms/coupons/promo/:promoId                   controllers.PromotionsController.delete(promoId: Long)
POST          /v1/cms/coupons/uploadStores                     controllers.PromotionsController.uploadStoreAddressCSV()
POST      /v1/cms/coupons/promo/convert                      controllers.PromotionsController.convertPromoToCoupon()
GET       /v1/cms/coupons/promo                              controllers.PromotionsController.getAllPromotions()
POST		/v1/cms/coupons/promo/rr-category/cms-category/csv		controllers.PromotionsController.createRRCategoryCMSCategoryMapping()
POST 		/v1/cms/coupons/promo/format/cms-category/csv			controllers.PromotionsController.createFormatCMSCategoryMapping()
POST      /coupons/v1/coupons/coupon-codes                   controllers.CouponsController.couponCodesBulkUploadRR()
POST      /coupons/v1/coupons/redemptions                    controllers.CouponsController.uploadRedemptionDataRR()
GET           /coupons/v1/coupons/code-details                     controllers.CouponsController.getCouponDetailsFromCodes(couponCodes: pojos.CouponCodes)
POST          /coupons/v1/coupons/category                         controllers.CategoryController.createCategory()
GET			/v1/cms/category/:id								controllers.CategoryController.getCategoriesByClient(id: Long)
GET         /coupons/v1/coupons/suggestions                             controllers.CouponsController.getSuggestions()
GET         /coupons/v1/coupons/:id/terms                             controllers.CouponsController.getCouponTerms(id : Long)
GET         /coupons/v1/coupons/:id/coupon-codes                             controllers.CouponsController.getCustomerCouponCodes(id : Long)
GET          /coupons/v1/coupons/user/claims                           controllers.CouponsController.couponClaimed()
DELETE       /coupons/v1/coupons/user/claims/:id                       controllers.CouponsController.couponReassign(id: Long)
POST         /v1/cms/mgdef                              ===============> Automated
POST         /v1/cms/mg_count                           controllers.MerchantGroupDefinitionController.getMerchantgroupCount()
PUT          /v1/cms/mgdef/:id                          controllers.MerchantGroupDefinitionController.updateMerchantgroupDefinition(id : Long)
GET          /v1/cms/mgdef/:id                          controllers.MerchantGroupDefinitionController.getMerchantgroupDefinition(id : Long)
DELETE       /v1/cms/mgdef/:id                          controllers.MerchantGroupDefinitionController.deleteMerchantgroupDefinition(id : Long)
GET          /v1/cms/property_values                    controllers.MerchantGroupDefinitionController.getPropertyValues()
PUT          /v1/cms/user/:id                                 controllers.AdminController.updateUser(id: Long)
DELETE        /coupons/v1/coupons/invalidateCache               controllers.CouponsController.invalidateCache()
GET           /coupons/v1/customer                              controllers.CustomerController.customerId()
GET          /coupons/v1/coupons/feature-flags                controllers.FeatureFlagsController.featureFlags()
GET         /callback                         @org.pac4j.play.CallbackController.callback()
POST        /callback                         @org.pac4j.play.CallbackController.callback()
GET         /v1/cms/logout                    ===============> Automated
POST         /v1/cms/userGroup/                                controllers.UserGroupController.createUserGroup()
DELETE       /v1/cms/userGroup/:id                             controllers.UserGroupController.deleteUserGroup(id: Long)
GET          /v1/cms/userGroup/:id                             controllers.UserGroupController.getUserGroup(id: Long)
GET          /v1/cms/userGroups/                               controllers.UserGroupController.getAllUserGroups()
PUT          /v1/cms/userGroup/:id                             controllers.UserGroupController.updateUserGroup(id: Long)
PUT             /coupons/v1/coupons/master-list         controllers.CouponsController.masterCouponsList()
DELETE          /coupons/v1/coupons/cache/:key          controllers.CouponsController.removeCacheKey(key: String)
GET    /v1/cms/coupons/isDuplicate                             controllers.CouponsController.isDuplicateCoupon()
GET    /v1/cms/coupons/isDuplicateSKU/:skuId                   controllers.CouponsController.isDuplicateSKU(skuId: Long)
GET         /v1/cms/reports                             controllers.ReportsController.get()
PUT     /v1/cms/merchant/bulk                                                                  controllers.MerchantController.storeMerchantES()
GET     /v1/cms/merchant                                                                       controllers.MerchantController.getMerchantES()
PUT     /v1/cms/fnr/transactions/bulk                                  controllers.ClosedLoopRedemptionController.storeClosedLoopTrxnsES()
GET     /v1/cms/fnr/transactions/merchants                             controllers.ClosedLoopRedemptionController.fetchAggregatedMerchantTrxns()
GET     /v1/cms/fnr/transactions/merchant/:id                          controllers.ClosedLoopRedemptionController.fetchTrxnsForMerchant(id: String)
POST    /v1/cms/fnr/comments                                                                   controllers.ClosedLoopRedemptionController.addComments()
GET     /v1/cms/fnr/comments                                                                   controllers.ClosedLoopRedemptionController.readComments()
POST    /v1/cms/fnr/transactions/releaseAll                            controllers.ClosedLoopRedemptionController.releaseAll()
GET     /v1/cms/fnr/report                                              controllers.ClosedLoopRedemptionController.getHoldDataReport()
GET     /v1/cms/fnr/report/download                                     controllers.ClosedLoopRedemptionController.downloadReportData()
GET     /v1/cms/test/mas-merchants/                                                     controllers.MerchantController.masMerchants()
GET     /v1/cms/test/clrs/                                                              controllers.ClosedLoopRedemptionController.transactionIds()
DELETE  /v1/cms/test/delete-comments/:commentType                                       controllers.ClosedLoopRedemptionController.deleteComments(commentType: String)
GET     /v1/cms/test/comments/:commentType                                              controllers.ClosedLoopRedemptionController.comments(commentType: String)
GET         /coupons/v1/coupons/cc                             controllers.CouponsController.getPhoneNumber(couponIds : String)
GET         /v1/coupons/cc                                     controllers.CouponsController.getPhoneNumber(couponIds : String)
POST         /coupons/v1/coupons/merchant/fc/coupon-codes            ===============> Automated
POST         /v1/coupons/merchant/fc/coupon-codes            controllers.FCCouponsController.getApplicableCouponCodes()
POST         /coupons/v1/coupons/merchant/:masId/fc/coupons          ===============> Automated
POST         /v1/coupons/merchant/:masId/fc/coupons                      controllers.FCCouponsController.fcCoupons(masId: String)
POST         /coupons/v1/coupons/merchant/fc/checkout                ===============> Automated
POST         /v1/coupons/merchant/fc/checkout                            controllers.FCCouponsController.checkout()
POST         /coupons/v1/coupons/merchant/fc/delayed-cancel              ===============> Automated
POST         /v1/coupons/merchant/fc/delayed-cancel                      controllers.FCCouponsController.cancelCheckout()
POST         /coupons/v1/coupons/merchant/fc/delayed-redeem              ===============> Automated
POST         /v1/coupons/merchant/fc/delayed-redeem                      controllers.FCCouponsController.delayedRedeem()
POST         /v1/coupons/merchant/fc/delivered                           controllers.FCCouponsController.delivered()
POST         /coupons/v1/coupons/merchant/fc/delivered                   controllers.FCCouponsController.delivered()
POST         /coupons/v1/coupons/merchant/fc/coupon-code-status          controllers.FCCouponsController.couponCodeStatus()
POST         /v1/coupons/merchant/fc/coupon-code-status                  controllers.FCCouponsController.couponCodeStatus()


POST        /coupons/v1/cms/coupons/bulk/b2b/upload               controllers.CouponsController.couponB2BbulkUpload()
GET          /coupons/v1/cms/coupon/bulk/b2b/upload/log                              controllers.CouponsController.getCouponB2BUploadLog()
GET          /coupons/v1/cms/coupon/bulk/b2b/download/inputFile/:id                 controllers.CouponsController.getCouponB2BUploadInputFile(id: Long)
GET          /coupons/v1/cms/coupon/bulk/b2b/download/outputFile/:id                controllers.CouponsController.getCouponB2BUploadOutputFile(id: Long)
